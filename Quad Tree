427. Construct Quad Tree

class Solution {
    public Node construct(int[][] grid) {
        return helper(grid, 0 , grid.length -1, 0, grid.length -1);
    }
    private Node helper(int[][] grid, int left, int right, int top, int bottom){
        if(left-right == 0 ) {
          return new Node(grid[top][right] == 1,true);
        }
        Node topLeft  = helper(grid, left, (left+right)/2, top, (top+bottom)/2);
        Node topRight = helper(grid, (right+left)/2 + 1,right,top,(top+bottom)/2);
        Node bottomLeft = helper(grid,left, (right+left)/2, (top+bottom)/2 + 1, bottom);
        Node bottomRight = helper(grid,(right+left)/2 +1, right, (top+bottom)/2 + 1, bottom);

        if(topLeft.isLeaf && topRight.isLeaf  && bottomLeft.isLeaf && bottomRight.isLeaf && topLeft.val && topRight.val  && bottomLeft.val && bottomRight.val  ){   
                    return new Node(true, true);
                }
        if(topLeft.isLeaf  && topRight.isLeaf  && bottomLeft.isLeaf  && bottomRight.isLeaf && !topLeft.val  && !topRight.val && !bottomLeft.val && !bottomRight.val){ 
                    return new Node(false, true);
                }
        return new Node(true, false, topLeft, topRight, bottomLeft, bottomRight);

    }
}
