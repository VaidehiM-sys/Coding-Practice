SPLIT A STRING INTO "K" SUBSTRING S WITH MIN LENGTH "M", ALSO FIRST CHAR SHOULD BE EVEN AND LAST ODD FOR ALL SUBSTRINGS THAT IS FORMED FROM SPLITTING

// "static void main" must be defined in a public class.
public class Main {
    static Integer[][] memo;
    
    private static int countNoOfWays(String s,int k, int m){
        int len = s.length();
        memo = new Integer[s.length()][k];
        if(len < m || (s.charAt(0) - '0') %2 != 0 || (s.charAt(len -1) - '0') % 2 == 0){
            return 0;
        }else{
            return helper(s, 0 , k - 1 , m);
        }
    }
    
    private static int helper(String s, int index, int k, int m){
        //base
        if(k == 0){
            return 1;
        }
        if(memo[index][k] != null){
            return memo[index][k];
        }
        
        //logic
        int sum  = 0;
        for(int i = index + m; i <  s.length(); i++){
            if((s.charAt(i) - '0') % 2 == 0 && (s.charAt(i - 1) - '0') % 2 != 0 ){
                System.out.print(s.substring(index,i) + "|");
                sum += helper(s, i , k - 1 , m);
            }
        }
        
        memo[index][k] = sum;
        return  memo[index][k];
    }
    
    public static void main(String[] args) {
        String s = "23436789";
        String s1 = "2345801";
        int k = 2;
        int m = 2;
        System.out.println("----"+countNoOfWays(s,k, m));
    }
}











